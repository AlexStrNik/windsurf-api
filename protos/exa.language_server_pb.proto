syntax = "proto3";
import "exa.codeium_common_pb.proto";
import "exa.diff_action_pb.proto";
import "exa.cortex_pb.proto";
import "exa.index_pb.proto";
import "exa.chat_pb.proto";
import "exa.reactive_component_pb.proto";
import "exa.auto_cascade_common_pb.proto";
import "exa.knowledge_base_pb.proto";
import "exa.code_edit.proto";
import "exa.cascade_plugins_pb.proto";

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";

package exa.language_server_pb;
message ValidationState {  string uri = 1;
  string last_acknowledged_state = 2;
  string current_state = 3;
  bool last_state_file_nonexistent = 4;
  bool current_state_file_nonexistent = 5;
}

message MultilineConfig {  float threshold = 1;
}

message GetCompletionsRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  exa.codeium_common_pb.Document document = 2;
  exa.codeium_common_pb.EditorOptions editor_options = 3;
  repeated exa.codeium_common_pb.Document other_documents = 5;
  exa.codeium_common_pb.MockResponseData mock_response_data = 6;
  bool disable_cache = 8;
  repeated exa.codeium_common_pb.CodeContextItem oracle_items = 9;
  string model_name = 10;
  exa.codeium_common_pb.Model requested_model_id = 12;
  exa.language_server_pb.MultilineConfig multiline_config = 13;
  exa.codeium_common_pb.ExperimentConfig experiment_config = 7;
}

message State {  exa.language_server_pb.CodeiumState state = 1;
  string message = 2;
}

message Suffix {  string text = 1;
  int64 delta_cursor_offset = 2;
}

message CompletionPart {  string text = 1;
  uint64 offset = 2;
  exa.language_server_pb.CompletionPartType type = 3;
  string prefix = 4;
  uint64 line = 5;
}

message CompletionItem {  exa.codeium_common_pb.Completion completion = 1;
  exa.language_server_pb.Suffix suffix = 5;
  exa.codeium_common_pb.Range range = 2;
  exa.codeium_common_pb.CompletionSource source = 3;
  repeated exa.language_server_pb.CompletionPart completion_parts = 8;
}

message RequestInfo {  string prompt_id = 1;
  exa.codeium_common_pb.CompletionsRequest completions_request = 4;
  string typing_as_suggested_prompt_suffix = 5;
  exa.codeium_common_pb.CompletionType completion_type = 6;
}

message LatencyInfo {  uint64 client_latency_ms = 1;
  uint64 prompt_latency_ms = 2;
  repeated exa.codeium_common_pb.PromptStageLatency prompt_stage_latencies = 3;
  uint64 debounce_latency_ms = 4;
  uint64 rpc_latency_ms = 5;
  uint64 network_latency_ms = 6;
}

message CodeRange {  exa.codeium_common_pb.CodeSource source = 1;
  uint64 start_offset = 2;
  uint64 end_offset = 3;
  bool modified = 4;
  string completion_id = 5;
  exa.codeium_common_pb.CompletionType completion_type = 6;
  exa.codeium_common_pb.ProviderSource provider_source = 7;
}

message GetCompletionsResponse {  exa.language_server_pb.State state = 1;
  repeated exa.language_server_pb.CompletionItem completion_items = 2;
  repeated exa.language_server_pb.CompletionItem filtered_completion_items = 7;
  exa.language_server_pb.RequestInfo request_info = 3;
  exa.language_server_pb.LatencyInfo latency_info = 4;
  string model_tag = 5;
  string prompt_id = 6;
  repeated exa.language_server_pb.CodeRange code_ranges = 8;
}

message AcceptCompletionRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  string completion_id = 2;
}

message AcceptCompletionResponse {}

message ProvideCompletionFeedbackRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  bool is_accepted = 2;
  int64 feedback_delay_ms = 3;
  string completion_id = 4;
  string prompt_id = 5;
  exa.language_server_pb.LatencyInfo latency_info = 6;
  exa.codeium_common_pb.ProviderSource source = 7;
  exa.codeium_common_pb.Document document = 8;
  uint64 view_columns_open = 10;
  bool is_intentional_reject = 11;
  bool is_partial = 12;
  string midstream_autocomplete_text = 13;
  bool has_active_vim_extension = 14;
  exa.codeium_common_pb.ExperimentConfig experiment_config = 9;
}

message ProvideCompletionFeedbackResponse {}

message HeartbeatRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  repeated exa.codeium_common_pb.ErrorTrace previous_error_traces = 2;
  exa.codeium_common_pb.ExperimentConfig experiment_config = 3;
}

message HeartbeatResponse {  google.protobuf.Timestamp last_extension_heartbeat = 1;
}

message GetStatusRequest {  exa.codeium_common_pb.Metadata metadata = 1;
}

message GetStatusResponse {  exa.codeium_common_pb.Status status = 1;
}

message GetCommandModelConfigsRequest {  exa.codeium_common_pb.Metadata metadata = 1;
}

message GetCommandModelConfigsResponse {  repeated exa.codeium_common_pb.ClientModelConfig client_model_configs = 1;
}

message GetCascadeModelConfigsRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  bool filter = 2;
}

message GetCascadeModelConfigsResponse {  repeated exa.codeium_common_pb.ClientModelConfig client_model_configs = 1;
  repeated exa.codeium_common_pb.ClientModelSort client_model_sorts = 2;
  exa.codeium_common_pb.DefaultOverrideModelConfig default_override_model_config = 3;
}

message GetProcessesRequest {}

message GetProcessesResponse {  uint32 lsp_port = 1;
  uint32 chat_web_server_port = 2;
  uint32 chat_client_port = 3;
}

message GetExternalModelRequest {  string api_key = 1;
}

message GetExternalModelResponse {  repeated exa.codeium_common_pb.ExternalModel models = 1;
}

message GetAuthTokenRequest {}

message GetAuthTokenResponse {  string auth_token = 1;
  string uuid = 2;
}

message RecordEventRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  exa.codeium_common_pb.Event event = 2;
}

message RecordEventResponse {}

message CancelRequestRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  uint64 request_id = 2;
}

message CancelRequestResponse {}

message EditConfigurationRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  exa.codeium_common_pb.CompletionConfiguration completion_configuration = 2;
}

message EditConfigurationResponse {  exa.codeium_common_pb.CompletionConfiguration completion_configuration = 1;
}

message MigrateApiKeyRequest {  string api_key = 1;
}

message MigrateApiKeyResponse {  string session_token = 1;
}

message GetPrimaryApiKeyForDevsOnlyRequest {  string session_token = 1;
}

message GetPrimaryApiKeyForDevsOnlyResponse {  string api_key = 1;
}

message ClusteredSearchRequest {  exa.codeium_common_pb.Metadata metadata = 4;
  string query = 1;
  uint32 num_results = 2;
  uint32 num_clusters = 3;
}

message SearchResult {  int64 embedding_id = 1;
  string absolute_path_migrate_me_to_uri = 2;
  string absolute_uri = 7;
  repeated exa.codeium_common_pb.WorkspacePath workspace_paths = 3;
  exa.codeium_common_pb.EmbeddingMetadata embedding_metadata = 4;
  float similarity_score = 5;
  exa.codeium_common_pb.CodeContextItem code_context_item = 6;
}

message SearchResultCluster {  repeated exa.language_server_pb.SearchResult search_results = 1;
  string representative_path = 2;
  string description = 3;
  float mean_similarity_score = 4;
  string search_id = 5;
  string result_id = 6;
}

message ClusteredSearchResponse {  repeated exa.language_server_pb.SearchResultCluster clusters = 1;
  string search_id = 2;
}

message WellSupportedLanguagesRequest {}

message WellSupportedLanguagesResponse {  repeated exa.codeium_common_pb.Language languages = 1;
}

message ProgressBarsRequest {}

message ProgressBar {  float progress = 1;
  string text = 2;
  bool hidden = 3;
  google.protobuf.Duration remaining_time = 4;
}

message ProgressBarsResponse {  map<string, exa.language_server_pb.ProgressBar> progress_bars = 1;
}

message RecordSearchDocOpenRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  string result_id = 2;
}

message RecordSearchDocOpenResponse {}

message RecordSearchResultsViewRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  string cluster_search_id = 2;
  string exact_search_id = 3;
  repeated string search_result_ids = 4;
}

message RecordSearchResultsViewResponse {}

message HandleStreamingCommandRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  exa.codeium_common_pb.Document document = 2;
  exa.codeium_common_pb.EditorOptions editor_options = 3;
  exa.codeium_common_pb.Model requested_model_id = 4;
  uint64 selection_start_line = 6;
  uint64 selection_end_line = 7;
  string command_text = 8;
  exa.codeium_common_pb.CommandRequestSource request_source = 9;
  exa.codeium_common_pb.ContextScope mentioned_scope = 10;
  exa.codeium_common_pb.ActionPointer action_pointer = 11;
  string parent_completion_id = 12;
  exa.diff_action_pb.DiffType diff_type = 13;
  repeated exa.codeium_common_pb.CodeDiagnostic diagnostics = 14;
  exa.codeium_common_pb.SupercompleteTriggerCondition supercomplete_trigger_condition = 15;
  exa.codeium_common_pb.TerminalCommandData terminal_command_data = 16;
  exa.codeium_common_pb.ExperimentConfig experiment_config = 5;
  bool ignore_supercomplete_debounce = 17;
  string clipboard_entry = 18;
  repeated exa.codeium_common_pb.IntellisenseSuggestion intellisense_suggestions = 19;
}

message HandleStreamingCommandResponse {  string completion_id = 1;
  string prompt_id = 2;
  exa.diff_action_pb.UnifiedDiff diff = 3;
  exa.language_server_pb.LatencyInfo latency_info = 4;
  uint64 selection_start_line = 5;
  uint64 selection_end_line = 6;
  double score = 7;
  exa.diff_action_pb.CharacterDiff character_diff = 8;
  exa.diff_action_pb.ComboDiff combo_diff = 9;
  exa.codeium_common_pb.SuperCompleteFilterReason filter_reason = 10;
  exa.codeium_common_pb.DocumentPosition jump_position = 14;
  exa.language_server_pb.RequestInfo request_info = 12;
  exa.codeium_common_pb.StopReason stop_reason = 13;
  exa.cortex_pb.CortexTrajectory trajectory = 15;
  string raw_text = 16;
  uint64 closest_changed_line = 11;
  string request_uid = 17;
}

message HandleStreamingTabRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  exa.codeium_common_pb.Document document = 2;
  exa.codeium_common_pb.EditorOptions editor_options = 3;
  exa.language_server_pb.TabRequestSource request_source = 4;
  repeated exa.codeium_common_pb.CodeDiagnostic diagnostics = 5;
  exa.codeium_common_pb.SupercompleteTriggerCondition supercomplete_trigger_condition = 6;
  string clipboard_entry = 7;
  repeated exa.codeium_common_pb.IntellisenseSuggestion intellisense_suggestions = 8;
  repeated exa.codeium_common_pb.Document other_documents = 9;
}

message TabRequestInfo {  string prompt_id = 1;
  string prompt = 2;
  string typing_as_suggested_prompt_suffix = 3;
}

message HandleStreamingTabResponse {  string completion_id = 1;
  string prompt_id = 2;
  exa.diff_action_pb.UnifiedDiff diff = 3;
  exa.language_server_pb.LatencyInfo latency_info = 4;
  uint64 selection_start_line = 5;
  uint64 selection_end_line = 6;
  double score = 7;
  exa.diff_action_pb.CharacterDiff character_diff = 8;
  exa.codeium_common_pb.SuperCompleteFilterReason filter_reason = 10;
  exa.codeium_common_pb.DocumentPosition jump_position = 14;
  exa.language_server_pb.TabRequestInfo request_info = 12;
  exa.codeium_common_pb.StopReason stop_reason = 13;
  string raw_text = 16;
  uint64 closest_changed_line = 11;
  string request_uid = 17;
}

message UploadRecentCommandsRequest {  exa.codeium_common_pb.Metadata metadata = 1;
}

message UploadRecentCommandsResponse {  repeated string request_uids = 1;
}

message GetBrainStatusRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  bool force_refresh = 2;
}

message ContextStatus {  exa.codeium_common_pb.Document active_document = 1;
  exa.codeium_common_pb.CodeContextItem last_active_code_context_item = 2;
  exa.codeium_common_pb.ContextScope pinned_scope = 3;
  exa.codeium_common_pb.Guideline pinned_guideline = 4;
  exa.codeium_common_pb.ContextScope default_pinned_scope = 5;
}

message LocalIndexStatus {  string workspace_folder = 1;
  string git_root = 2;
  string repo_name = 3;
  exa.codeium_common_pb.GitRepoInfo remote_repo = 4;
  exa.index_pb.IndexStats index_stats = 5;
  exa.codeium_common_pb.WorkspaceStats workspace_stats = 7;
  exa.codeium_common_pb.PartialIndexMetadata partial_index_metadata = 8;
  map<string, exa.language_server_pb.ProgressBar> index_progress = 6;
}

message IndexStatus {  repeated exa.language_server_pb.LocalIndexStatus local_indexes = 1;
  repeated string ignored_local_workspaces = 2;
  uint32 local_files_index_capacity = 3;
}

message BrainStatus {  exa.language_server_pb.ContextStatus context_status = 1;
  exa.language_server_pb.IndexStatus index_status = 2;
}

message GetBrainStatusResponse {  exa.language_server_pb.BrainStatus brain_status = 1;
}

message SetPinnedGuidelineRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  exa.codeium_common_pb.Guideline pinned_guideline = 2;
}

message SetPinnedGuidelineResponse {}

message SetPinnedContextRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  exa.codeium_common_pb.ContextScope pinned_scope = 2;
}

message SetPinnedContextResponse {}

message GetMcpServerTemplatesRequest {  exa.codeium_common_pb.Metadata metadata = 1;
}

message GetMcpServerTemplatesResponse {  repeated exa.codeium_common_pb.McpServerTemplate templates = 1;
}

message AddTrackedWorkspaceRequest {  string workspace = 1;
}

message AddTrackedWorkspaceResponse {}

message RemoveTrackedWorkspaceRequest {  string workspace = 1;
}

message RemoveTrackedWorkspaceResponse {}

message StatUriRequest {  string uri = 1;
}

message StatUriResponse {  exa.language_server_pb.FileType file_type = 1;
}

message ValidateWindsurfJSAppProjectNameRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  string project_name = 2;
}

message ValidateWindsurfJSAppProjectNameResponse {  exa.codeium_common_pb.ValidationStatus status = 1;
  string invalid_reason = 3;
  repeated string alternative_names = 2;
}

message SaveWindsurfJSAppProjectNameRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  string workspace_uri = 2;
  string project_name = 3;
}

message SaveWindsurfJSAppProjectNameResponse {  exa.codeium_common_pb.WebAppDeploymentConfig deployment_config = 1;
}

message RefreshContextForIdeActionRequest {  exa.codeium_common_pb.Metadata metadata = 8;
  exa.codeium_common_pb.Document active_document = 1;
  repeated string open_document_filepaths_migrate_me_to_uri = 2;
  repeated string open_document_uris = 6;
  repeated exa.codeium_common_pb.Document other_documents = 5;
  repeated string workspace_paths_migrate_me_to_uri = 3;
  repeated string workspace_uris = 7;
  bool blocking = 4;
  exa.codeium_common_pb.ExperimentConfig experiment_config = 9;
  exa.language_server_pb.IdeAction ide_action = 10;
}

message RefreshContextForIdeActionResponse {}

message GetMatchingCodeContextRequest {  string query = 1;
  bool fuzzy_match = 2;
  repeated exa.codeium_common_pb.CodeContextType allowed_types = 3;
  int32 max_items = 4;
  bool case_insensitive = 5;
}

message GetMatchingCodeContextResponse {  repeated exa.codeium_common_pb.CodeContextItem matched_items = 1;
}

message GetMatchingIndexedReposRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  string query = 2;
  bool fuzzy_match = 3;
  int32 max_items = 4;
  bool case_insensitive = 5;
}

message GetMatchingIndexedReposResponse {  repeated exa.codeium_common_pb.GitRepoInfo matched_repositories = 1;
}

message GetMatchingContextScopeItemsRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  repeated exa.codeium_common_pb.ContextScopeType allowed_types = 2;
  repeated exa.codeium_common_pb.CodeContextType allowed_context_types = 7;
  string query = 3;
  bool fuzzy_match = 4;
  int32 max_items = 5;
  bool case_insensitive = 6;
  string repo_filter = 8;
}

message GetMatchingContextScopeItemsResponse {  repeated exa.codeium_common_pb.ContextScopeItem items = 1;
}

message GetSuggestedContextScopeItemsRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  repeated exa.language_server_pb.ContextSuggestionSource suggestion_sources = 2;
  string query = 3;
  uint64 auto_expand_file_limit = 4;
  uint64 max_items = 5;
}

message GetSuggestedContextScopeItemsResponse {  repeated exa.codeium_common_pb.ContextScopeItem items = 1;
}

message GetChatMessageResponse {  exa.chat_pb.ChatMessage chat_message = 1;
  uint32 num_tokens_in_intent = 2;
}

message RawGetChatMessageResponse {  exa.chat_pb.RawChatMessage delta_message = 1;
}

message GetDeepWikiResponse {  exa.language_server_pb.RawGetChatMessageResponse response = 1;
  string request_id = 2;
  exa.codeium_common_pb.DeepWikiModelType model_type = 3;
  string followup_questions = 4;
  bool is_article_done = 5;
}

message GetMessageTokenCountRequest {  string chat_message = 1;
  exa.codeium_common_pb.Model requested_model_id = 2;
}

message GetMessageTokenCountResponse {  uint32 token_count = 1;
}

message RecordChatFeedbackRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  string message_id = 2;
  exa.chat_pb.ChatFeedbackType feedback = 3;
  string reason = 4;
  google.protobuf.Timestamp timestamp = 5;
}

message RecordChatFeedbackResponse {}

message RecordChatPanelSessionRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  google.protobuf.Timestamp start_timestamp = 2;
  google.protobuf.Timestamp end_timestamp = 3;
}

message RecordChatPanelSessionResponse {}

message ShouldEnableUnleashRequest {}

message ShouldEnableUnleashResponse {  bool should_enable = 1;
}

message GetWorkspaceEditStateRequest {}

message WorkspaceEditState {  string repo_root = 1;
  uint64 num_additions = 2;
  uint64 num_deletions = 3;
  repeated exa.cortex_pb.ActionResultEdit edits = 4;
}

message GetWorkspaceEditStateResponse {  repeated exa.language_server_pb.WorkspaceEditState workspace_edits = 1;
}

message GetRepoInfosRequest {  exa.codeium_common_pb.Metadata metadata = 1;
}

message BranchInfo {  string name = 1;
  bool is_current_branch = 2;
}

message RepoInfo {  string name = 1;
  string repo_path = 2;
  repeated exa.language_server_pb.BranchInfo branches = 3;
  exa.codeium_common_pb.ScmType scm_type = 4;
  string full_repo_name = 5;
}

message GetRepoInfosResponse {  repeated exa.language_server_pb.RepoInfo repos = 1;
}

message GetWorkspaceInfosRequest {}

message WorkspaceInfo {  string workspace_uri = 1;
  string git_root_uri = 2;
}

message GetWorkspaceInfosResponse {  string home_dir_path = 1;
  repeated exa.language_server_pb.WorkspaceInfo workspace_infos = 2;
  string home_dir_uri = 3;
}

message CreateWorktreeRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  string repo_path = 2;
  string base_branch_name = 3;
  exa.codeium_common_pb.PlanInfo plan_info = 4;
  repeated exa.codeium_common_pb.TextOrScopeItem items = 5;
  repeated exa.codeium_common_pb.ImageData images = 6;
}

message CreateWorktreeResponse {  string worktree_path = 1;
  string worktree_name = 2;
}

message GenerateCommitMessageRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  exa.codeium_common_pb.PlanInfo plan_info = 2;
}

message CommitMessageData {  string repo_root = 1;
  string commit_message_summary = 2;
  string commit_message_description = 3;
  repeated string changed_files_migrate_me_to_uri = 4;
  repeated string changed_file_uris = 5;
}

message GenerateCommitMessageResponse {  repeated exa.language_server_pb.CommitMessageData commit_messages = 1;
}

message RecordCommitMessageSaveRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  string repo_root = 2;
  string branch_name = 3;
  string commit_hash = 4;
  string commit_message = 5;
  google.protobuf.Timestamp commit_timestamp = 6;
  string parent_commit_hash = 7;
  string author_name = 8;
  string author_email = 9;
}

message RecordCommitMessageSaveResponse {}

message UpdatePRForWorktreeRequest {  string worktree_fs_path = 1;
  string commit_message = 2;
  string title = 3;
  string body = 4;
}

message UpdatePRForWorktreeResponse {  string pr_url = 1;
}

message SendActionToChatPanelRequest {  string action_type = 1;
  repeated bytes payload = 2;
}

message SendActionToChatPanelResponse {}

message GetUserSettingsRequest {}

message GetUserSettingsResponse {  exa.codeium_common_pb.UserSettings user_settings = 1;
}

message SetUserSettingsRequest {  exa.codeium_common_pb.UserSettings user_settings = 1;
}

message SetUserSettingsResponse {  exa.codeium_common_pb.UserSettings user_settings = 1;
}

message GetDebugDiagnosticsRequest {}

message GetDebugDiagnosticsResponse {  exa.codeium_common_pb.LanguageServerDiagnostics language_server_diagnostics = 1;
}

message GetUserAnalyticsSummaryRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  string time_zone = 2;
  google.protobuf.Timestamp start_timestamp = 3;
  google.protobuf.Timestamp end_timestamp = 4;
}

message GetUserAnalyticsSummaryResponse {  exa.codeium_common_pb.CompletionStatistics completion_statistics = 1;
  repeated exa.codeium_common_pb.CompletionByDateEntry completions_by_day = 2;
  repeated exa.codeium_common_pb.CompletionByLanguageEntry completions_by_language = 3;
  repeated exa.codeium_common_pb.ChatStatsByModelEntry chats_by_model = 4;
}

message GetUserStatusRequest {  exa.codeium_common_pb.Metadata metadata = 1;
}

message GetUserStatusResponse {  exa.codeium_common_pb.UserStatus user_status = 1;
  exa.codeium_common_pb.PlanInfo plan_info = 2;
}

message GetProfileDataRequest {  string api_key = 1;
}

message GetProfileDataResponse {  string profile_picture_url = 1;
}

message CaptureCodeRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  string prompt_id = 2;
  string code = 3;
  uint64 timeout_sec = 4;
  string completion_text = 5;
  exa.codeium_common_pb.ProviderSource provider_source = 6;
  string completion_id = 7;
  string diagnostic_severity = 8;
}

message CaptureCodeResponse {}

message CaptureFileRequest {  exa.codeium_common_pb.CaptureFileRequestData data = 1;
  exa.codeium_common_pb.ExperimentConfig experiment_config = 2;
}

message CaptureFileResponse {}

message GetChangelogRequest {  string version = 1;
}

message GetChangelogResponse {  string path = 1;
}

message GetFunctionsRequest {  exa.codeium_common_pb.Document document = 1;
}

message GetFunctionsResponse {  repeated exa.codeium_common_pb.FunctionInfo function_captures = 1;
}

message GetClassInfosRequest {  exa.codeium_common_pb.Document document = 1;
}

message GetClassInfosResponse {  repeated exa.codeium_common_pb.ClassInfo class_captures = 1;
}

message SetupUniversitySandboxRequest {}

message SetupUniversitySandboxResponse {  string base_directory = 1;
}

message ExitRequest {}

message ExitResponse {}

message CodeTheme {  string background = 1;
  string text = 2;
  string whitespace = 3;
  string other = 4;
  string literal = 5;
  string literal_string = 6;
  string number = 7;
  string operator = 8;
  string punctuation = 9;
  string generic = 10;
  string name = 11;
  string keyword = 12;
  string comment = 13;
  string error = 14;
}

message RenderConfig {  string font_family = 1;
  string theme_name = 2;
  float line_height = 3;
  exa.language_server_pb.EditorThemeType theme_type = 4;
  float font_size = 5;
  exa.language_server_pb.CodeTheme theme = 6;
  string shortcut = 7;
}

message RenderRequestMetadata {  string language = 6;
}

message RenderInsertionSideHintRequest {  exa.diff_action_pb.CharacterDiff diff = 1;
  exa.language_server_pb.RenderConfig config = 2;
  exa.language_server_pb.RenderRequestMetadata metadata = 3;
}

message RenderedSideHintDisplayOptions {  int32 width = 1;
  int32 height = 2;
  float dpmm = 3;
  float scale = 4;
}

message RenderInsertionSideHintResponse {  string data = 1;
  exa.language_server_pb.RenderedSideHintDisplayOptions display_options = 2;
}

message ResetOnboardingRequest {  bool clear_history = 1;
}

message ResetOnboardingResponse {}

message SkipOnboardingRequest {}

message SkipOnboardingResponse {}

message GetUserTrajectoryDebugRequest {  bool include_all_trajectories = 1;
}

message GetUserTrajectoryDebugResponse {  repeated exa.cortex_pb.ImplicitTrajectory mainline = 1;
  exa.cortex_pb.CortexTrajectory granular = 2;
}

message GetUserTrajectoryDescriptionsRequest {}

message GetUserTrajectoryDescriptionsResponse {  repeated exa.cortex_pb.ImplicitTrajectoryDescription trajectories = 1;
}

message GetCascadeMemoriesRequest {}

message GetCascadeMemoriesResponse {  repeated exa.cortex_pb.CortexMemory memories = 1;
}

message DeleteCascadeMemoryRequest {  string memory_id = 1;
}

message DeleteCascadeMemoryResponse {}

message UpdateCascadeMemoryRequest {  string memory_id = 1;
  string title = 2;
  string content = 3;
  repeated string tags = 4;
}

message UpdateCascadeMemoryResponse {}

message GetUserMemoriesRequest {}

message GetUserMemoriesResponse {  repeated exa.cortex_pb.CortexMemory memories = 1;
}

message GetConversationTagsRequest {  exa.codeium_common_pb.Metadata metadata = 1;
}

message ConversationTagList {  repeated string tags = 1;
}

message GetConversationTagsResponse {  map<string, exa.language_server_pb.ConversationTagList> conversation_tags = 1;
}

message UpdateConversationTagsRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  string cascade_id = 2;
  repeated string tags = 3;
}

message UpdateConversationTagsResponse {}

message StartCascadeRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  exa.cortex_pb.BaseTrajectoryIdentifier base_trajectory_identifier = 3;
  exa.cortex_pb.CortexTrajectorySource source = 4;
  exa.cortex_pb.CortexTrajectoryType trajectory_type = 5;
  exa.codeium_common_pb.ExperimentConfig experiment_config = 2;
}

message StartCascadeResponse {  string cascade_id = 1;
}

message CancelCascadeInvocationRequest {  string cascade_id = 1;
}

message CancelCascadeInvocationResponse {}

message CancelCascadeStepsRequest {  string cascade_id = 1;
  repeated uint32 step_indices = 2;
}

message CancelCascadeStepsResponse {}

message SendUserCascadeMessageRequest {  exa.codeium_common_pb.Metadata metadata = 3;
  string cascade_id = 1;
  repeated exa.codeium_common_pb.TextOrScopeItem items = 2;
  repeated exa.codeium_common_pb.ImageData images = 6;
  exa.cortex_pb.CascadeConfig cascade_config = 5;
  exa.codeium_common_pb.ExperimentConfig experiment_config = 4;
  repeated string recipe_ids = 7;
  bool blocking = 8;
  repeated exa.cortex_pb.CortexTrajectoryStep additional_steps = 9;
}

message SendUserCascadeMessageResponse {}

message RevertToCascadeStepRequest {  exa.codeium_common_pb.Metadata metadata = 3;
  string cascade_id = 1;
  int32 step_index = 2;
  exa.codeium_common_pb.ExperimentConfig experiment_config = 4;
}

message RevertToCascadeStepResponse {  exa.cortex_pb.RevertMetadata metadata = 1;
}

message GetRevertPreviewRequest {  string cascade_id = 1;
  uint32 step_index = 2;
  exa.codeium_common_pb.Metadata metadata = 3;
}

message CodeEditRevertPreview {  string file_uri = 1;
  exa.diff_action_pb.UnifiedDiff diff = 2;
  exa.language_server_pb.CodeRevertActionType action_type = 3;
}

message GetRevertPreviewResponse {  repeated exa.language_server_pb.CodeEditRevertPreview code_edit_previews = 1;
}

message UnrevertToCascadeStepRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  string cascade_id = 2;
  int32 num_steps = 3;
}

message UnrevertToCascadeStepResponse {  exa.cortex_pb.UnrevertMetadata metadata = 1;
}

message GetUnrevertPreviewRequest {  string cascade_id = 1;
  int32 num_steps = 2;
}

message GetUnrevertPreviewResponse {  repeated exa.language_server_pb.CodeEditRevertPreview code_edit_previews = 1;
}

message RecordUserStepSnapshotRequest {  string cascade_id = 1;
  int32 step_index = 2;
  exa.cortex_pb.UserStepSnapshot snapshot = 3;
}

message RecordUserStepSnapshotResponse {}

message GetAllCascadeTrajectoriesRequest {  bool include_user_inputs = 1;
}

message UserInputWithMetadata {  string cascade_id = 1;
  string user_response = 2;
  repeated exa.codeium_common_pb.TextOrScopeItem items = 3;
  google.protobuf.Timestamp timestamp = 4;
}

message GetAllCascadeTrajectoriesResponse {  map<string, exa.cortex_pb.CascadeTrajectorySummary> trajectory_summaries = 1;
  repeated exa.language_server_pb.UserInputWithMetadata user_inputs = 2;
}

message HandleCascadeUserInteractionRequest {  string cascade_id = 1;
  exa.cortex_pb.CascadeUserInteraction interaction = 2;
}

message HandleCascadeUserInteractionResponse {}

message AcknowledgeCascadeCodeEditRequest {  exa.codeium_common_pb.Metadata metadata = 4;
  string cascade_id = 1;
  repeated string absolute_uri = 2;
  repeated string contents = 5;
  bool accept = 3;
}

message AcknowledgeCascadeCodeEditResponse {}

message GetCodeValidationStatesRequest {  string cascade_id = 1;
}

message GetCodeValidationStatesResponse {  repeated exa.language_server_pb.ValidationState states = 1;
}

message DeleteCascadeTrajectoryRequest {  string cascade_id = 1;
}

message DeleteCascadeTrajectoryResponse {}

message RenameCascadeTrajectoryRequest {  string cascade_id = 1;
  string name = 2;
}

message RenameCascadeTrajectoryResponse {}

message InitializeCascadePanelStateRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  exa.codeium_common_pb.UserStatus user_status = 2;
}

message InitializeCascadePanelStateResponse {}

message ForceBackgroundResearchRefreshRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  string mainline_trajectory_id = 2;
  bool blocking = 3;
  bool full_refresh = 4;
}

message ForceBackgroundResearchRefreshResponse {}

message ResolveOutstandingStepsRequest {  string cascade_id = 1;
}

message ResolveOutstandingStepsResponse {}

message RefreshMcpServersRequest {  bool shallow = 1;
  string server_name = 2;
}

message RefreshMcpServersResponse {}

message GetMcpServerStatesRequest {}

message GetMcpServerStatesResponse {  repeated exa.cortex_pb.McpServerState states = 1;
  bool is_loading = 2;
}

message StreamTerminalShellCommandResponse {}

message GetWebDocsOptionsRequest {  exa.codeium_common_pb.Metadata metadata = 1;
}

message GetWebDocsOptionsResponse {  repeated exa.codeium_common_pb.WebDocsOption options = 1;
}

message UpdateDevExperimentsRequest {  exa.codeium_common_pb.ExperimentConfig experiment_config = 1;
}

message UpdateDevExperimentsResponse {}

message SetBaseExperimentsRequest {  exa.codeium_common_pb.ExperimentConfig experiment_config = 1;
}

message SetBaseExperimentsResponse {}

message GetUnleashDataRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  map<string, string> properties = 2;
}

message GetUnleashDataResponse {  exa.codeium_common_pb.UnleashContext context = 1;
  exa.codeium_common_pb.ExperimentConfig experiment_config = 2;
}

message GetActiveAppDeploymentForWorkspaceRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  string workspace_uri = 2;
}

message GetActiveAppDeploymentForWorkspaceResponse {  exa.codeium_common_pb.WebAppDeploymentConfig deployment_config = 1;
  exa.codeium_common_pb.WindsurfDeployment deployment = 2;
  string project_name = 3;
  string subdomain = 4;
  google.protobuf.Timestamp project_created_at = 5;
  string team_slug = 6;
}

message GetWindsurfJSAppDeploymentRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  string deployment_id = 2;
}

message GetWindsurfJSAppDeploymentResponse {  exa.codeium_common_pb.WindsurfDeployment deployment = 1;
  exa.codeium_common_pb.DeploymentBuildStatus build_status = 2;
  string deployment_url = 3;
  string build_error = 4;
  string build_logs = 5;
  bool is_claimed = 6;
  string claim_url = 7;
}

message GetModelStatusesRequest {  exa.codeium_common_pb.Metadata metadata = 1;
}

message GetModelStatusesResponse {  repeated exa.codeium_common_pb.ModelStatusInfo model_status_infos = 1;
}

message UpdateAutoCascadeGithubCredentialsRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  string github_token = 2;
}

message UpdateAutoCascadeGithubCredentialsResponse {}

message SendUserAutoCascadeMessageRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  repeated exa.codeium_common_pb.TextOrScopeItem items = 2;
  repeated exa.codeium_common_pb.ImageData images = 3;
  string session_key = 4;
}

message SendUserAutoCascadeMessageResponse {  string session_key = 1;
}

message DeleteAutoCascadeSessionRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  string session_key = 2;
}

message DeleteAutoCascadeSessionResponse {}

message CheckoutAutoCascadeSessionBranchRequest {  repeated exa.auto_cascade_common_pb.GitRepoInfo git_repo_infos = 1;
  repeated string workspace_uris = 2;
}

message CheckoutAutoCascadeSessionBranchResponse {}

message DiffAutoCascadeSessionBranchRequest {  repeated exa.auto_cascade_common_pb.GitRepoInfo git_repo_infos = 1;
  repeated string workspace_uris = 2;
}

message DiffAutoCascadeSessionBranchResponse {  repeated exa.language_server_pb.ValidationState validation_states = 1;
  bool can_merge = 2;
}

message MergeAutoCascadeSessionBranchRequest {  repeated exa.auto_cascade_common_pb.GitRepoInfo git_repo_infos = 1;
  repeated string workspace_uris = 2;
}

message MergeAutoCascadeSessionBranchResponse {}

message GetAllWorkflowsRequest {}

message GetAllWorkflowsResponse {  repeated exa.cortex_pb.WorkflowSpec workflows = 2;
}

message CopyBuiltinWorkflowToWorkspaceRequest {  exa.cortex_pb.WorkflowSpec workflow = 1;
  exa.codeium_common_pb.Metadata metadata = 2;
}

message CopyBuiltinWorkflowToWorkspaceResponse {  exa.cortex_pb.WorkflowSpec workflow = 1;
}

message GetAllRulesRequest {}

message GetAllRulesResponse {  repeated exa.cortex_pb.CortexMemory memories = 2;
}

message GetAllClaudeCodeAgentsRequest {  exa.language_server_pb.ClaudeCodeAgentType agent_type = 1;
  string workspace_uri = 2;
}

message ClaudeCodeAgent {  string name = 1;
  string description = 2;
  string tools = 3;
  string content = 4;
  string file_path = 5;
  string color = 6;
  string model = 7;
}

message GetAllClaudeCodeAgentsResponse {  repeated exa.language_server_pb.ClaudeCodeAgent agents = 1;
}

message CreateClaudeCodeAgentRequest {  exa.language_server_pb.ClaudeCodeAgent agent = 1;
  exa.language_server_pb.ClaudeCodeAgentType agent_type = 2;
  string workspace_uri = 3;
}

message CreateClaudeCodeAgentResponse {}

message DeleteClaudeCodeAgentRequest {  string name = 1;
  exa.language_server_pb.ClaudeCodeAgentType agent_type = 2;
  string workspace_uri = 3;
}

message DeleteClaudeCodeAgentResponse {}

message GetAllClaudeCodeMemoriesRequest {  exa.language_server_pb.ClaudeCodeAgentType memory_type = 1;
  string workspace_uri = 2;
}

message ClaudeCodeMemory {  string content = 1;
  string filepath = 2;
}

message GetAllClaudeCodeMemoriesResponse {  repeated exa.language_server_pb.ClaudeCodeMemory memories = 1;
}

message CreateClaudeCodeMemoriesRequest {  exa.language_server_pb.ClaudeCodeMemory memory = 1;
  exa.language_server_pb.ClaudeCodeAgentType memory_type = 2;
  string workspace_uri = 3;
}

message CreateClaudeCodeMemoriesResponse {}

message DeleteClaudeCodeMemoriesRequest {  exa.language_server_pb.ClaudeCodeAgentType memory_type = 1;
  string workspace_uri = 2;
}

message DeleteClaudeCodeMemoriesResponse {}

message GetClaudeCodeSettingsRequest {}

message McpServers {  repeated string mcp_server_content = 1;
}

message ClaudeCodePermissions {  repeated string allow = 1;
  repeated string deny = 2;
}

message ClaudeCodeSettings {  exa.language_server_pb.McpServers servers = 1;
  exa.language_server_pb.ClaudeCodePermissions permissions = 2;
}

message GetClaudeCodeSettingsResponse {  exa.language_server_pb.ClaudeCodeSettings settings = 1;
}

message EditClaudeCodeSettingsRequest {  exa.language_server_pb.ClaudeCodeSettings settings = 1;
}

message EditClaudeCodeSettingsResponse {}

message GetClaudeCodeProjectMcpRequest {  string workspace_uri = 1;
}

message GetClaudeCodeProjectMcpResponse {  exa.language_server_pb.McpServers servers = 1;
}

message EditClaudeCodeProjectMcpRequest {  string workspace_uri = 1;
  exa.language_server_pb.McpServers servers = 2;
}

message EditClaudeCodeProjectMcpResponse {}

message ListMcpResourcesRequest {  string server_name = 1;
  string query = 2;
}

message ListMcpResourcesResponse {  repeated exa.codeium_common_pb.McpResourceItem resources = 1;
}

message UpdateEnterpriseExperimentsFromUrlRequest {  string portal_url = 1;
}

message UpdateEnterpriseExperimentsFromUrlResponse {  bool success = 1;
  string error_message = 2;
  exa.codeium_common_pb.ExperimentConfig experiment_config = 3;
}

message ImportFromCursorRequest {  string source_path = 1;
}

message ImportFromCursorResponse {  repeated string copied_files = 1;
  repeated string duplicate_files = 2;
  repeated string problem_files = 3;
}

message CreateCustomizationFileRequest {  exa.language_server_pb.CustomizationFileType file_type = 1;
  string file_name = 2;
}

message CreateCustomizationFileResponse {  string file_path = 1;
}

message GetTeamOrganizationalControlsRequest {  exa.codeium_common_pb.Metadata metadata = 1;
}

message GetTeamOrganizationalControlsResponse {  exa.codeium_common_pb.TeamOrganizationalControls controls = 1;
}

message RecordUserGrepRequest {  string query = 1;
  repeated exa.cortex_pb.GrepSearchResult results = 2;
  google.protobuf.Timestamp timestamp = 3;
}

message RecordUserGrepResponse {}

message GetGithubPullRequestInfoRequest {  exa.codeium_common_pb.Metadata metadata = 1;
}

message GetGithubPullRequestInfoResponse {  repeated exa.auto_cascade_common_pb.GithubPullRequestInfo pull_request_infos = 1;
}

message GetGithubPullRequestSearchInfoRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  string query = 2;
}

message GetGithubPullRequestSearchInfoResponse {  repeated exa.auto_cascade_common_pb.GithubPullRequestInfo pull_request_infos = 1;
}

message CreateTrajectoryShareRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  exa.cortex_pb.TrajectoryShareStatus share_status = 3;
  string cascade_id = 4;
}

message CreateTrajectoryShareResponse {  string url = 1;
}

message GetKnowledgeBaseItemsForTeamRequest {  exa.codeium_common_pb.Metadata metadata = 1;
}

message GetKnowledgeBaseItemsForTeamResponse {  repeated exa.knowledge_base_pb.KnowledgeBaseItem items = 1;
}

message GetCascadeTrajectoryRequest {  string cascade_id = 1;
}

message GetCascadeTrajectoryResponse {  exa.cortex_pb.CortexTrajectory trajectory = 1;
  exa.cortex_pb.CascadeRunStatus status = 2;
  uint32 num_total_steps = 3;
  uint32 num_total_generator_metadata = 4;
}

message GetUserTrajectoryRequest {  string trajectory_id = 1;
}

message GetUserTrajectoryResponse {  exa.cortex_pb.CortexTrajectory trajectory = 1;
}

message GetCascadeTrajectoryStepsRequest {  string cascade_id = 1;
  uint32 step_offset = 2;
}

message GetCascadeTrajectoryStepsResponse {  repeated exa.cortex_pb.CortexTrajectoryStep steps = 1;
}

message GetCascadeTrajectoryGeneratorMetadataRequest {  string cascade_id = 1;
  uint32 generator_metadata_offset = 2;
}

message GetCascadeTrajectoryGeneratorMetadataResponse {  repeated exa.cortex_pb.CortexStepGeneratorMetadata generator_metadata = 1;
}

message GetPatchAndCodeChangeRequest {  string intent = 1;
  exa.codeium_common_pb.GitRepoInfo base_state_repo_info = 2;
  string repo_path = 3;
}

message GetPatchAndCodeChangeResponse {  string patch_string = 1;
  exa.code_edit.CodeChangeWithContext code_change_with_context = 2;
}

message GetAvailableCascadePluginsRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  string os = 2;
  string search_query = 3;
}

message GetAvailableCascadePluginsResponse {  repeated exa.cascade_plugins_pb.CascadePluginTemplate plugins = 1;
}

message InstallCascadePluginRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  string plugin_id = 2;
}

message InstallCascadePluginResponse {  int64 installation_count = 1;
}

message GetCascadePluginByIdRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  string os = 2;
  string plugin_id = 3;
}

message GetCascadePluginByIdResponse {  exa.cascade_plugins_pb.CascadePluginTemplate plugin = 1;
}

message RecordLintsRequest {  exa.codeium_common_pb.Language current_language = 1;
  repeated exa.codeium_common_pb.CodeDiagnostic lints = 2;
  google.protobuf.Timestamp timestamp = 3;
}

message RecordLintsResponse {}

message ReplayGroundTruthTrajectoryRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  repeated exa.cortex_pb.CortexTrajectoryStep replay_steps = 2;
  string cascade_id = 3;
  exa.cortex_pb.CascadeConfig cascade_config = 4;
}

message ReplayGroundTruthTrajectoryResponse {  exa.cortex_pb.CortexTrajectory trajectory = 1;
}

message RecordInteractiveCascadeFeedbackRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  string cascade_id = 2;
  int32 step_index = 3;
  int32 chunk_index = 4;
  exa.cortex_pb.AcknowledgementType acknowledgement_type = 5;
}

message RecordInteractiveCascadeFeedbackResponse {}

message LogCascadeSessionRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  repeated string workspace_paths = 2;
}

message LogCascadeSessionResponse {}

message GetCascadeNuxesRequest {  exa.codeium_common_pb.Metadata metadata = 1;
}

message GetCascadeNuxesResponse {  repeated exa.codeium_common_pb.CascadeNUXConfig nuxes = 1;
}

message GetTranscriptionRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  bytes audio_data = 2;
}

message GetTranscriptionResponse {  string transcribed_text = 1;
}

message VibeAndReplaceFile {  string file_uri = 1;
  string original_content = 2;
  repeated string matches = 3;
  repeated int32 match_lines = 4;
}

message GenerateVibeAndReplaceStreamingRequest {  exa.codeium_common_pb.Metadata metadata = 1;
  exa.codeium_common_pb.PlanInfo plan_info = 2;
  string prompt = 3;
  string search_query = 4;
  string search_options_text = 5;
  repeated exa.language_server_pb.VibeAndReplaceFile files = 6;
  string cascade_id = 7;
  exa.codeium_common_pb.Model model_for_generation = 8;
}

message VibeAndReplaceData {  string request_id = 1;
  string output = 2;
  repeated exa.codeium_common_pb.ChatToolCall tool_calls = 3;
  exa.codeium_common_pb.GRPCStatus error = 4;
  string file_path = 5;
  bool is_skipped = 6;
}

message GenerateVibeAndReplaceStreamingResponse {  exa.language_server_pb.VibeAndReplaceData vibe_and_replace_data = 1;
}

message ClaudeCodeMCPRequest {  string request = 1;
  string tool = 2;
  string cascade_session_id = 3;
}

message ClaudeCodeMCPResponse {  string response = 1;
}

enum CodeiumState {  CODEIUM_STATE_UNSPECIFIED = 0;  CODEIUM_STATE_INACTIVE = 1;  CODEIUM_STATE_PROCESSING = 2;  CODEIUM_STATE_SUCCESS = 3;  CODEIUM_STATE_WARNING = 4;  CODEIUM_STATE_ERROR = 5;}
enum CompletionPartType {  COMPLETION_PART_TYPE_UNSPECIFIED = 0;  COMPLETION_PART_TYPE_INLINE = 1;  COMPLETION_PART_TYPE_BLOCK = 2;  COMPLETION_PART_TYPE_INLINE_MASK = 3;}
enum TabRequestSource {  TAB_REQUEST_SOURCE_UNSPECIFIED = 0;  TAB_REQUEST_SOURCE_SUPERCOMPLETE = 1;  TAB_REQUEST_SOURCE_TAB_JUMP = 2;}
enum FileType {  FILE_TYPE_UNSPECIFIED = 0;  FILE_TYPE_FILE = 1;  FILE_TYPE_DIRECTORY = 2;  FILE_TYPE_SYMLINK = 3;}
enum IdeAction {  IDE_ACTION_UNSPECIFIED = 0;  IDE_ACTION_SAVE = 1;  IDE_ACTION_SELECTION_CHANGED = 2;  IDE_ACTION_VISIBLE_RANGES_CHANGED = 3;  IDE_ACTION_ACTIVE_EDITOR_CHANGED = 4;  IDE_ACTION_STARTUP = 5;}
enum ContextSuggestionSource {  CONTEXT_SUGGESTION_SOURCE_UNSPECIFIED = 0;  CONTEXT_SUGGESTION_SOURCE_COMMIT_HISTORY = 1;  CONTEXT_SUGGESTION_SOURCE_CURRENT_PLAN = 2;}
enum EditorThemeType {  EDITOR_THEME_TYPE_UNSPECIFIED = 0;  EDITOR_THEME_TYPE_LIGHT = 1;  EDITOR_THEME_TYPE_DARK = 2;  EDITOR_THEME_TYPE_HIGH_CONTRAST = 3;  EDITOR_THEME_TYPE_HIGH_CONTRAST_LIGHT = 4;}
enum CodeRevertActionType {  CODE_REVERT_ACTION_TYPE_UNSPECIFIED = 0;  CODE_REVERT_ACTION_TYPE_MODIFY = 1;  CODE_REVERT_ACTION_TYPE_CREATE = 2;  CODE_REVERT_ACTION_TYPE_DELETE = 3;}
enum ClaudeCodeAgentType {  CLAUDE_CODE_AGENT_TYPE_UNSPECIFIED = 0;  CLAUDE_CODE_AGENT_TYPE_USER = 1;  CLAUDE_CODE_AGENT_TYPE_PROJECT = 2;}
enum CustomizationFileType {  CUSTOMIZATION_FILE_TYPE_UNSPECIFIED = 0;  CUSTOMIZATION_FILE_TYPE_RULES = 1;  CUSTOMIZATION_FILE_TYPE_WORKFLOWS = 2;  CUSTOMIZATION_FILE_TYPE_GLOBAL_WORKFLOWS = 3;}
service LanguageServerService {
  rpc GetCompletions(exa.language_server_pb.GetCompletionsRequest) returns (exa.language_server_pb.GetCompletionsResponse);
  rpc AcceptCompletion(exa.language_server_pb.AcceptCompletionRequest) returns (exa.language_server_pb.AcceptCompletionResponse);
  rpc ProvideCompletionFeedback(exa.language_server_pb.ProvideCompletionFeedbackRequest) returns (exa.language_server_pb.ProvideCompletionFeedbackResponse);
  rpc Heartbeat(exa.language_server_pb.HeartbeatRequest) returns (exa.language_server_pb.HeartbeatResponse);
  rpc GetStatus(exa.language_server_pb.GetStatusRequest) returns (exa.language_server_pb.GetStatusResponse);
  rpc GetCommandModelConfigs(exa.language_server_pb.GetCommandModelConfigsRequest) returns (exa.language_server_pb.GetCommandModelConfigsResponse);
  rpc GetCascadeModelConfigs(exa.language_server_pb.GetCascadeModelConfigsRequest) returns (exa.language_server_pb.GetCascadeModelConfigsResponse);
  rpc GetProcesses(exa.language_server_pb.GetProcessesRequest) returns (exa.language_server_pb.GetProcessesResponse);
  rpc GetExternalModel(exa.language_server_pb.GetExternalModelRequest) returns (exa.language_server_pb.GetExternalModelResponse);
  rpc GetAuthToken(exa.language_server_pb.GetAuthTokenRequest) returns (exa.language_server_pb.GetAuthTokenResponse);
  rpc RecordEvent(exa.language_server_pb.RecordEventRequest) returns (exa.language_server_pb.RecordEventResponse);
  rpc CancelRequest(exa.language_server_pb.CancelRequestRequest) returns (exa.language_server_pb.CancelRequestResponse);
  rpc EditConfiguration(exa.language_server_pb.EditConfigurationRequest) returns (exa.language_server_pb.EditConfigurationResponse);
  rpc MigrateApiKey(exa.language_server_pb.MigrateApiKeyRequest) returns (exa.language_server_pb.MigrateApiKeyResponse);
  rpc GetPrimaryApiKeyForDevsOnly(exa.language_server_pb.GetPrimaryApiKeyForDevsOnlyRequest) returns (exa.language_server_pb.GetPrimaryApiKeyForDevsOnlyResponse);
  rpc ClusteredSearch(exa.language_server_pb.ClusteredSearchRequest) returns (exa.language_server_pb.ClusteredSearchResponse);
  rpc WellSupportedLanguages(exa.language_server_pb.WellSupportedLanguagesRequest) returns (exa.language_server_pb.WellSupportedLanguagesResponse);
  rpc ProgressBars(exa.language_server_pb.ProgressBarsRequest) returns (exa.language_server_pb.ProgressBarsResponse);
  rpc RecordSearchDocOpen(exa.language_server_pb.RecordSearchDocOpenRequest) returns (exa.language_server_pb.RecordSearchDocOpenResponse);
  rpc RecordSearchResultsView(exa.language_server_pb.RecordSearchResultsViewRequest) returns (exa.language_server_pb.RecordSearchResultsViewResponse);
  rpc HandleStreamingCommand(stream exa.language_server_pb.HandleStreamingCommandRequest) returns (exa.language_server_pb.HandleStreamingCommandResponse);
  rpc HandleStreamingTab(stream exa.language_server_pb.HandleStreamingTabRequest) returns (exa.language_server_pb.HandleStreamingTabResponse);
  rpc UploadRecentCommands(exa.language_server_pb.UploadRecentCommandsRequest) returns (exa.language_server_pb.UploadRecentCommandsResponse);
  rpc GetBrainStatus(exa.language_server_pb.GetBrainStatusRequest) returns (exa.language_server_pb.GetBrainStatusResponse);
  rpc SetPinnedGuideline(exa.language_server_pb.SetPinnedGuidelineRequest) returns (exa.language_server_pb.SetPinnedGuidelineResponse);
  rpc SetPinnedContext(exa.language_server_pb.SetPinnedContextRequest) returns (exa.language_server_pb.SetPinnedContextResponse);
  rpc GetMcpServerTemplates(exa.language_server_pb.GetMcpServerTemplatesRequest) returns (exa.language_server_pb.GetMcpServerTemplatesResponse);
  rpc AddTrackedWorkspace(exa.language_server_pb.AddTrackedWorkspaceRequest) returns (exa.language_server_pb.AddTrackedWorkspaceResponse);
  rpc RemoveTrackedWorkspace(exa.language_server_pb.RemoveTrackedWorkspaceRequest) returns (exa.language_server_pb.RemoveTrackedWorkspaceResponse);
  rpc StatUri(exa.language_server_pb.StatUriRequest) returns (exa.language_server_pb.StatUriResponse);
  rpc ValidateWindsurfJSAppProjectName(exa.language_server_pb.ValidateWindsurfJSAppProjectNameRequest) returns (exa.language_server_pb.ValidateWindsurfJSAppProjectNameResponse);
  rpc SaveWindsurfJSAppProjectName(exa.language_server_pb.SaveWindsurfJSAppProjectNameRequest) returns (exa.language_server_pb.SaveWindsurfJSAppProjectNameResponse);
  rpc RefreshContextForIdeAction(exa.language_server_pb.RefreshContextForIdeActionRequest) returns (exa.language_server_pb.RefreshContextForIdeActionResponse);
  rpc GetMatchingCodeContext(exa.language_server_pb.GetMatchingCodeContextRequest) returns (exa.language_server_pb.GetMatchingCodeContextResponse);
  rpc GetMatchingIndexedRepos(exa.language_server_pb.GetMatchingIndexedReposRequest) returns (exa.language_server_pb.GetMatchingIndexedReposResponse);
  rpc GetMatchingContextScopeItems(exa.language_server_pb.GetMatchingContextScopeItemsRequest) returns (exa.language_server_pb.GetMatchingContextScopeItemsResponse);
  rpc GetSuggestedContextScopeItems(exa.language_server_pb.GetSuggestedContextScopeItemsRequest) returns (exa.language_server_pb.GetSuggestedContextScopeItemsResponse);
  rpc GetChatMessage(stream exa.chat_pb.GetChatMessageRequest) returns (exa.language_server_pb.GetChatMessageResponse);
  rpc RawGetChatMessage(stream exa.chat_pb.RawGetChatMessageRequest) returns (exa.language_server_pb.RawGetChatMessageResponse);
  rpc GetDeepWiki(stream exa.chat_pb.GetDeepWikiRequest) returns (exa.language_server_pb.GetDeepWikiResponse);
  rpc GetMessageTokenCount(exa.language_server_pb.GetMessageTokenCountRequest) returns (exa.language_server_pb.GetMessageTokenCountResponse);
  rpc RecordChatFeedback(exa.language_server_pb.RecordChatFeedbackRequest) returns (exa.language_server_pb.RecordChatFeedbackResponse);
  rpc RecordChatPanelSession(exa.language_server_pb.RecordChatPanelSessionRequest) returns (exa.language_server_pb.RecordChatPanelSessionResponse);
  rpc ShouldEnableUnleash(exa.language_server_pb.ShouldEnableUnleashRequest) returns (exa.language_server_pb.ShouldEnableUnleashResponse);
  rpc GetWorkspaceEditState(exa.language_server_pb.GetWorkspaceEditStateRequest) returns (exa.language_server_pb.GetWorkspaceEditStateResponse);
  rpc GetRepoInfos(exa.language_server_pb.GetRepoInfosRequest) returns (exa.language_server_pb.GetRepoInfosResponse);
  rpc GetWorkspaceInfos(exa.language_server_pb.GetWorkspaceInfosRequest) returns (exa.language_server_pb.GetWorkspaceInfosResponse);
  rpc CreateWorktree(exa.language_server_pb.CreateWorktreeRequest) returns (exa.language_server_pb.CreateWorktreeResponse);
  rpc GenerateCommitMessage(exa.language_server_pb.GenerateCommitMessageRequest) returns (exa.language_server_pb.GenerateCommitMessageResponse);
  rpc RecordCommitMessageSave(exa.language_server_pb.RecordCommitMessageSaveRequest) returns (exa.language_server_pb.RecordCommitMessageSaveResponse);
  rpc UpdatePRForWorktree(exa.language_server_pb.UpdatePRForWorktreeRequest) returns (exa.language_server_pb.UpdatePRForWorktreeResponse);
  rpc SendActionToChatPanel(exa.language_server_pb.SendActionToChatPanelRequest) returns (exa.language_server_pb.SendActionToChatPanelResponse);
  rpc GetUserSettings(exa.language_server_pb.GetUserSettingsRequest) returns (exa.language_server_pb.GetUserSettingsResponse);
  rpc SetUserSettings(exa.language_server_pb.SetUserSettingsRequest) returns (exa.language_server_pb.SetUserSettingsResponse);
  rpc GetDebugDiagnostics(exa.language_server_pb.GetDebugDiagnosticsRequest) returns (exa.language_server_pb.GetDebugDiagnosticsResponse);
  rpc GetUserAnalyticsSummary(exa.language_server_pb.GetUserAnalyticsSummaryRequest) returns (exa.language_server_pb.GetUserAnalyticsSummaryResponse);
  rpc GetUserStatus(exa.language_server_pb.GetUserStatusRequest) returns (exa.language_server_pb.GetUserStatusResponse);
  rpc GetProfileData(exa.language_server_pb.GetProfileDataRequest) returns (exa.language_server_pb.GetProfileDataResponse);
  rpc CaptureCode(exa.language_server_pb.CaptureCodeRequest) returns (exa.language_server_pb.CaptureCodeResponse);
  rpc CaptureFile(exa.language_server_pb.CaptureFileRequest) returns (exa.language_server_pb.CaptureFileResponse);
  rpc GetChangelog(exa.language_server_pb.GetChangelogRequest) returns (exa.language_server_pb.GetChangelogResponse);
  rpc GetFunctions(exa.language_server_pb.GetFunctionsRequest) returns (exa.language_server_pb.GetFunctionsResponse);
  rpc GetClassInfos(exa.language_server_pb.GetClassInfosRequest) returns (exa.language_server_pb.GetClassInfosResponse);
  rpc SetupUniversitySandbox(exa.language_server_pb.SetupUniversitySandboxRequest) returns (exa.language_server_pb.SetupUniversitySandboxResponse);
  rpc Exit(exa.language_server_pb.ExitRequest) returns (exa.language_server_pb.ExitResponse);
  rpc RenderInsertionSideHint(exa.language_server_pb.RenderInsertionSideHintRequest) returns (exa.language_server_pb.RenderInsertionSideHintResponse);
  rpc ResetOnboarding(exa.language_server_pb.ResetOnboardingRequest) returns (exa.language_server_pb.ResetOnboardingResponse);
  rpc SkipOnboarding(exa.language_server_pb.SkipOnboardingRequest) returns (exa.language_server_pb.SkipOnboardingResponse);
  rpc GetUserTrajectoryDebug(exa.language_server_pb.GetUserTrajectoryDebugRequest) returns (exa.language_server_pb.GetUserTrajectoryDebugResponse);
  rpc GetUserTrajectoryDescriptions(exa.language_server_pb.GetUserTrajectoryDescriptionsRequest) returns (exa.language_server_pb.GetUserTrajectoryDescriptionsResponse);
  rpc StreamUserTrajectoryReactiveUpdates(stream exa.reactive_component_pb.StreamReactiveUpdatesRequest) returns (exa.reactive_component_pb.StreamReactiveUpdatesResponse);
  rpc GetCascadeMemories(exa.language_server_pb.GetCascadeMemoriesRequest) returns (exa.language_server_pb.GetCascadeMemoriesResponse);
  rpc DeleteCascadeMemory(exa.language_server_pb.DeleteCascadeMemoryRequest) returns (exa.language_server_pb.DeleteCascadeMemoryResponse);
  rpc UpdateCascadeMemory(exa.language_server_pb.UpdateCascadeMemoryRequest) returns (exa.language_server_pb.UpdateCascadeMemoryResponse);
  rpc GetUserMemories(exa.language_server_pb.GetUserMemoriesRequest) returns (exa.language_server_pb.GetUserMemoriesResponse);
  rpc GetConversationTags(exa.language_server_pb.GetConversationTagsRequest) returns (exa.language_server_pb.GetConversationTagsResponse);
  rpc UpdateConversationTags(exa.language_server_pb.UpdateConversationTagsRequest) returns (exa.language_server_pb.UpdateConversationTagsResponse);
  rpc StartCascade(exa.language_server_pb.StartCascadeRequest) returns (exa.language_server_pb.StartCascadeResponse);
  rpc CancelCascadeInvocation(exa.language_server_pb.CancelCascadeInvocationRequest) returns (exa.language_server_pb.CancelCascadeInvocationResponse);
  rpc CancelCascadeSteps(exa.language_server_pb.CancelCascadeStepsRequest) returns (exa.language_server_pb.CancelCascadeStepsResponse);
  rpc SendUserCascadeMessage(exa.language_server_pb.SendUserCascadeMessageRequest) returns (exa.language_server_pb.SendUserCascadeMessageResponse);
  rpc RevertToCascadeStep(exa.language_server_pb.RevertToCascadeStepRequest) returns (exa.language_server_pb.RevertToCascadeStepResponse);
  rpc GetRevertPreview(exa.language_server_pb.GetRevertPreviewRequest) returns (exa.language_server_pb.GetRevertPreviewResponse);
  rpc UnrevertToCascadeStep(exa.language_server_pb.UnrevertToCascadeStepRequest) returns (exa.language_server_pb.UnrevertToCascadeStepResponse);
  rpc GetUnrevertPreview(exa.language_server_pb.GetUnrevertPreviewRequest) returns (exa.language_server_pb.GetUnrevertPreviewResponse);
  rpc RecordUserStepSnapshot(exa.language_server_pb.RecordUserStepSnapshotRequest) returns (exa.language_server_pb.RecordUserStepSnapshotResponse);
  rpc GetAllCascadeTrajectories(exa.language_server_pb.GetAllCascadeTrajectoriesRequest) returns (exa.language_server_pb.GetAllCascadeTrajectoriesResponse);
  rpc HandleCascadeUserInteraction(exa.language_server_pb.HandleCascadeUserInteractionRequest) returns (exa.language_server_pb.HandleCascadeUserInteractionResponse);
  rpc AcknowledgeCascadeCodeEdit(exa.language_server_pb.AcknowledgeCascadeCodeEditRequest) returns (exa.language_server_pb.AcknowledgeCascadeCodeEditResponse);
  rpc GetCodeValidationStates(exa.language_server_pb.GetCodeValidationStatesRequest) returns (exa.language_server_pb.GetCodeValidationStatesResponse);
  rpc DeleteCascadeTrajectory(exa.language_server_pb.DeleteCascadeTrajectoryRequest) returns (exa.language_server_pb.DeleteCascadeTrajectoryResponse);
  rpc RenameCascadeTrajectory(exa.language_server_pb.RenameCascadeTrajectoryRequest) returns (exa.language_server_pb.RenameCascadeTrajectoryResponse);
  rpc InitializeCascadePanelState(exa.language_server_pb.InitializeCascadePanelStateRequest) returns (exa.language_server_pb.InitializeCascadePanelStateResponse);
  rpc StreamCascadePanelReactiveUpdates(stream exa.reactive_component_pb.StreamReactiveUpdatesRequest) returns (exa.reactive_component_pb.StreamReactiveUpdatesResponse);
  rpc StreamCascadeReactiveUpdates(stream exa.reactive_component_pb.StreamReactiveUpdatesRequest) returns (exa.reactive_component_pb.StreamReactiveUpdatesResponse);
  rpc StreamCascadeSummariesReactiveUpdates(stream exa.reactive_component_pb.StreamReactiveUpdatesRequest) returns (exa.reactive_component_pb.StreamReactiveUpdatesResponse);
  rpc ForceBackgroundResearchRefresh(exa.language_server_pb.ForceBackgroundResearchRefreshRequest) returns (exa.language_server_pb.ForceBackgroundResearchRefreshResponse);
  rpc ResolveOutstandingSteps(exa.language_server_pb.ResolveOutstandingStepsRequest) returns (exa.language_server_pb.ResolveOutstandingStepsResponse);
  rpc RefreshMcpServers(exa.language_server_pb.RefreshMcpServersRequest) returns (exa.language_server_pb.RefreshMcpServersResponse);
  rpc GetMcpServerStates(exa.language_server_pb.GetMcpServerStatesRequest) returns (exa.language_server_pb.GetMcpServerStatesResponse);
  rpc StreamTerminalShellCommand(exa.codeium_common_pb.TerminalShellCommandStreamChunk) returns (stream exa.language_server_pb.StreamTerminalShellCommandResponse);
  rpc GetWebDocsOptions(exa.language_server_pb.GetWebDocsOptionsRequest) returns (exa.language_server_pb.GetWebDocsOptionsResponse);
  rpc UpdateDevExperiments(exa.language_server_pb.UpdateDevExperimentsRequest) returns (exa.language_server_pb.UpdateDevExperimentsResponse);
  rpc SetBaseExperiments(exa.language_server_pb.SetBaseExperimentsRequest) returns (exa.language_server_pb.SetBaseExperimentsResponse);
  rpc GetUnleashData(exa.language_server_pb.GetUnleashDataRequest) returns (exa.language_server_pb.GetUnleashDataResponse);
  rpc GetActiveAppDeploymentForWorkspace(exa.language_server_pb.GetActiveAppDeploymentForWorkspaceRequest) returns (exa.language_server_pb.GetActiveAppDeploymentForWorkspaceResponse);
  rpc GetWindsurfJSAppDeployment(exa.language_server_pb.GetWindsurfJSAppDeploymentRequest) returns (exa.language_server_pb.GetWindsurfJSAppDeploymentResponse);
  rpc GetModelStatuses(exa.language_server_pb.GetModelStatusesRequest) returns (exa.language_server_pb.GetModelStatusesResponse);
  rpc UpdateAutoCascadeGithubCredentials(exa.language_server_pb.UpdateAutoCascadeGithubCredentialsRequest) returns (exa.language_server_pb.UpdateAutoCascadeGithubCredentialsResponse);
  rpc SendUserAutoCascadeMessage(exa.language_server_pb.SendUserAutoCascadeMessageRequest) returns (exa.language_server_pb.SendUserAutoCascadeMessageResponse);
  rpc DeleteAutoCascadeSession(exa.language_server_pb.DeleteAutoCascadeSessionRequest) returns (exa.language_server_pb.DeleteAutoCascadeSessionResponse);
  rpc CheckoutAutoCascadeSessionBranch(exa.language_server_pb.CheckoutAutoCascadeSessionBranchRequest) returns (exa.language_server_pb.CheckoutAutoCascadeSessionBranchResponse);
  rpc DiffAutoCascadeSessionBranch(exa.language_server_pb.DiffAutoCascadeSessionBranchRequest) returns (exa.language_server_pb.DiffAutoCascadeSessionBranchResponse);
  rpc MergeAutoCascadeSessionBranch(exa.language_server_pb.MergeAutoCascadeSessionBranchRequest) returns (exa.language_server_pb.MergeAutoCascadeSessionBranchResponse);
  rpc StreamAutoCascadeTrajectoriesReactiveUpdates(stream exa.reactive_component_pb.StreamReactiveUpdatesRequest) returns (exa.reactive_component_pb.StreamReactiveUpdatesResponse);
  rpc GetAllWorkflows(exa.language_server_pb.GetAllWorkflowsRequest) returns (exa.language_server_pb.GetAllWorkflowsResponse);
  rpc CopyBuiltinWorkflowToWorkspace(exa.language_server_pb.CopyBuiltinWorkflowToWorkspaceRequest) returns (exa.language_server_pb.CopyBuiltinWorkflowToWorkspaceResponse);
  rpc GetAllRules(exa.language_server_pb.GetAllRulesRequest) returns (exa.language_server_pb.GetAllRulesResponse);
  rpc GetAllClaudeCodeAgents(exa.language_server_pb.GetAllClaudeCodeAgentsRequest) returns (exa.language_server_pb.GetAllClaudeCodeAgentsResponse);
  rpc CreateClaudeCodeAgent(exa.language_server_pb.CreateClaudeCodeAgentRequest) returns (exa.language_server_pb.CreateClaudeCodeAgentResponse);
  rpc DeleteClaudeCodeAgent(exa.language_server_pb.DeleteClaudeCodeAgentRequest) returns (exa.language_server_pb.DeleteClaudeCodeAgentResponse);
  rpc GetAllClaudeCodeMemories(exa.language_server_pb.GetAllClaudeCodeMemoriesRequest) returns (exa.language_server_pb.GetAllClaudeCodeMemoriesResponse);
  rpc CreateClaudeCodeMemories(exa.language_server_pb.CreateClaudeCodeMemoriesRequest) returns (exa.language_server_pb.CreateClaudeCodeMemoriesResponse);
  rpc DeleteClaudeCodeMemories(exa.language_server_pb.DeleteClaudeCodeMemoriesRequest) returns (exa.language_server_pb.DeleteClaudeCodeMemoriesResponse);
  rpc GetClaudeCodeSettings(exa.language_server_pb.GetClaudeCodeSettingsRequest) returns (exa.language_server_pb.GetClaudeCodeSettingsResponse);
  rpc EditClaudeCodeSettings(exa.language_server_pb.EditClaudeCodeSettingsRequest) returns (exa.language_server_pb.EditClaudeCodeSettingsResponse);
  rpc GetClaudeCodeProjectMcp(exa.language_server_pb.GetClaudeCodeProjectMcpRequest) returns (exa.language_server_pb.GetClaudeCodeProjectMcpResponse);
  rpc EditClaudeCodeProjectMcp(exa.language_server_pb.EditClaudeCodeProjectMcpRequest) returns (exa.language_server_pb.EditClaudeCodeProjectMcpResponse);
  rpc ListMcpResources(exa.language_server_pb.ListMcpResourcesRequest) returns (exa.language_server_pb.ListMcpResourcesResponse);
  rpc UpdateEnterpriseExperimentsFromUrl(exa.language_server_pb.UpdateEnterpriseExperimentsFromUrlRequest) returns (exa.language_server_pb.UpdateEnterpriseExperimentsFromUrlResponse);
  rpc ImportFromCursor(exa.language_server_pb.ImportFromCursorRequest) returns (exa.language_server_pb.ImportFromCursorResponse);
  rpc CreateCustomizationFile(exa.language_server_pb.CreateCustomizationFileRequest) returns (exa.language_server_pb.CreateCustomizationFileResponse);
  rpc GetTeamOrganizationalControls(exa.language_server_pb.GetTeamOrganizationalControlsRequest) returns (exa.language_server_pb.GetTeamOrganizationalControlsResponse);
  rpc RecordUserGrep(exa.language_server_pb.RecordUserGrepRequest) returns (exa.language_server_pb.RecordUserGrepResponse);
  rpc GetGithubPullRequestInfo(exa.language_server_pb.GetGithubPullRequestInfoRequest) returns (exa.language_server_pb.GetGithubPullRequestInfoResponse);
  rpc GetGithubPullRequestSearchInfo(exa.language_server_pb.GetGithubPullRequestSearchInfoRequest) returns (exa.language_server_pb.GetGithubPullRequestSearchInfoResponse);
  rpc CreateTrajectoryShare(exa.language_server_pb.CreateTrajectoryShareRequest) returns (exa.language_server_pb.CreateTrajectoryShareResponse);
  rpc GetKnowledgeBaseItemsForTeam(exa.language_server_pb.GetKnowledgeBaseItemsForTeamRequest) returns (exa.language_server_pb.GetKnowledgeBaseItemsForTeamResponse);
  rpc GetCascadeTrajectory(exa.language_server_pb.GetCascadeTrajectoryRequest) returns (exa.language_server_pb.GetCascadeTrajectoryResponse);
  rpc GetUserTrajectory(exa.language_server_pb.GetUserTrajectoryRequest) returns (exa.language_server_pb.GetUserTrajectoryResponse);
  rpc GetCascadeTrajectorySteps(exa.language_server_pb.GetCascadeTrajectoryStepsRequest) returns (exa.language_server_pb.GetCascadeTrajectoryStepsResponse);
  rpc GetCascadeTrajectoryGeneratorMetadata(exa.language_server_pb.GetCascadeTrajectoryGeneratorMetadataRequest) returns (exa.language_server_pb.GetCascadeTrajectoryGeneratorMetadataResponse);
  rpc GetPatchAndCodeChange(exa.language_server_pb.GetPatchAndCodeChangeRequest) returns (exa.language_server_pb.GetPatchAndCodeChangeResponse);
  rpc GetAvailableCascadePlugins(exa.language_server_pb.GetAvailableCascadePluginsRequest) returns (exa.language_server_pb.GetAvailableCascadePluginsResponse);
  rpc InstallCascadePlugin(exa.language_server_pb.InstallCascadePluginRequest) returns (exa.language_server_pb.InstallCascadePluginResponse);
  rpc GetCascadePluginById(exa.language_server_pb.GetCascadePluginByIdRequest) returns (exa.language_server_pb.GetCascadePluginByIdResponse);
  rpc RecordLints(exa.language_server_pb.RecordLintsRequest) returns (exa.language_server_pb.RecordLintsResponse);
  rpc ReplayGroundTruthTrajectory(exa.language_server_pb.ReplayGroundTruthTrajectoryRequest) returns (exa.language_server_pb.ReplayGroundTruthTrajectoryResponse);
  rpc RecordInteractiveCascadeFeedback(exa.language_server_pb.RecordInteractiveCascadeFeedbackRequest) returns (exa.language_server_pb.RecordInteractiveCascadeFeedbackResponse);
  rpc LogCascadeSession(exa.language_server_pb.LogCascadeSessionRequest) returns (exa.language_server_pb.LogCascadeSessionResponse);
  rpc GetCascadeNuxes(exa.language_server_pb.GetCascadeNuxesRequest) returns (exa.language_server_pb.GetCascadeNuxesResponse);
  rpc GetTranscription(exa.language_server_pb.GetTranscriptionRequest) returns (exa.language_server_pb.GetTranscriptionResponse);
  rpc GenerateVibeAndReplaceStreaming(stream exa.language_server_pb.GenerateVibeAndReplaceStreamingRequest) returns (exa.language_server_pb.GenerateVibeAndReplaceStreamingResponse);
  rpc ClaudeCodeMCP(exa.language_server_pb.ClaudeCodeMCPRequest) returns (exa.language_server_pb.ClaudeCodeMCPResponse);
}

