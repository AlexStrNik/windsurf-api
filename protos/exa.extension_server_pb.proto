syntax = "proto3";
import "exa.codeium_common_pb.proto";
import "exa.language_server_pb.proto";
import "exa.cortex_pb.proto";

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";

package exa.extension_server_pb;
message LanguageServerStartedRequest {  int32 language_server_port = 1;
  int32 lsp_port = 2;
  int32 chat_client_port = 3;
  string csrf_token = 4;
}

message LanguageServerStartedResponse {}

message OpenSettingRequest {  string setting_id = 1;
}

message OpenSettingResponse {}

message OpenFilePointerRequest {  string file_uri = 1;
  int32 start_line = 2;
  int32 start_col = 3;
  int32 end_line = 4;
  int32 end_col = 5;
  bool is_cascade_diff = 6;
}

message OpenFilePointerResponse {}

message InsertCodeAtCursorRequest {  string text = 1;
  exa.extension_server_pb.ActiveEditorType editor_type = 2;
}

message InsertCodeAtCursorResponse {}

message EventMetadataRecord {  string key = 1;
  string value = 2;
}

message LogEventRequest {  exa.codeium_common_pb.ProductEventType event = 1;
  string event_string = 3;
  repeated exa.extension_server_pb.EventMetadataRecord metadata = 2;
}

message LogEventResponse {}

message CheckTerminalShellSupportRequest {}

message CheckTerminalShellSupportResponse {  bool has_shell_integration = 1;
  string shell_name = 2;
  string shell_path = 3;
}

message ExecuteCommandRequest {  string command_line = 5;
  string cwd = 3;
  string terminal_id = 4;
}

message ShowTerminalRequest {  string terminal_id = 1;
}

message ShowTerminalResponse {}

message OpenVirtualFileRequest {  string text = 1;
  bool show_markdown_preview = 2;
}

message OpenVirtualFileResponse {}

message SaveDocumentRequest {  string uri = 1;
}

message SaveDocumentResponse {}

message ReadTerminalRequest {  string process_id = 1;
}

message ReadTerminalResponse {  string contents = 1;
}

message OpenTerminalRequest {  string process_id = 1;
}

message OpenTerminalResponse {}

message AwaitNewLintsConfig {  string acknowledger_id = 1;
  int32 timeout_ms = 2;
  int32 grace_period_ms = 3;
  bool include_saved = 4;
}

message GetLintErrorsRequest {  exa.extension_server_pb.AwaitNewLintsConfig await_new_lints_config = 1;
}

message GetLintErrorsResponse {  repeated exa.codeium_common_pb.CodeDiagnostic lint_errors = 1;
  repeated exa.codeium_common_pb.CodeDiagnostic persistent_lint_errors = 2;
}

message OpenDiffZonesRequest {  string cascade_id = 1;
  repeated exa.language_server_pb.ValidationState validation_states = 2;
  bool write_new_state = 3;
}

message OpenDiffZonesResponse {}

message OpenExternalUrlRequest {  string url = 1;
  bool use_ide_browser = 2;
}

message OpenExternalUrlResponse {}

message OpenMultiDiffRequest {  string cascade_id = 1;
}

message OpenMultiDiffResponse {}

message HandleAsyncPostMessageRequest {  string message_type = 1;
  string message_content = 2;
}

message HandleAsyncPostMessageResponse {  string response_content = 1;
}

message PlaySoundRequest {  exa.extension_server_pb.SoundType sound_type = 1;
}

message PlaySoundResponse {}

message OpenWindsurfRulesFileRequest {  bool is_workspace_rules = 1;
}

message OpenWindsurfRulesFileResponse {}

message DeleteWindsurfRulesFileRequest {  bool is_workspace_rules = 1;
}

message DeleteWindsurfRulesFileResponse {}

message OpenPluginPageRequest {  string plugin_id = 4;
}

message OpenPluginPageResponse {}

message OpenPluginConfigModalRequest {  string plugin_id = 3;
}

message OpenPluginConfigModalResponse {}

message OpenConfigurePluginsPageRequest {  string server_name = 1;
}

message OpenConfigurePluginsPageResponse {}

message OpenConversationWorkspaceQuickPickRequest {  string cascade_id = 1;
  repeated string workspace_uris = 2;
}

message OpenConversationWorkspaceQuickPickResponse {  bool open_in_current_window = 1;
}

message FindAllReferencesRequest {  string file_uri = 1;
  string symbol = 2;
  uint32 line = 3;
  uint32 occurrence_index = 4;
}

message FindAllReferencesResponse {  repeated exa.codeium_common_pb.LspReference references = 1;
}

message GetDefinitionRequestItem {  string file_uri = 1;
  exa.codeium_common_pb.DocumentPosition position = 2;
  string line_content = 3;
}

message GetDefinitionRequest {  repeated exa.extension_server_pb.GetDefinitionRequestItem request = 1;
}

message GetDefinitionResponseItem {  repeated exa.codeium_common_pb.LspReference definitions = 1;
  exa.codeium_common_pb.GRPCStatus status = 2;
}

message GetDefinitionResponse {  repeated exa.extension_server_pb.GetDefinitionResponseItem response = 1;
}

message RefreshURIsRequest {  repeated string uris = 1;
}

message RefreshURIsResponse {}

message CheckExperimentRequest {  string experiment_key = 1;
  map<string, string> context_overrides = 2;
}

message ExperimentPayload {  string type = 1;
  string value = 2;
}

message ExperimentVariant {  string name = 1;
  exa.extension_server_pb.ExperimentPayload payload = 2;
}

message CheckExperimentResponse {  bool enabled = 1;
  exa.extension_server_pb.ExperimentVariant variant = 2;
  string error_message = 3;
}

message TerminalResearchResultRequest {  exa.cortex_pb.CortexTrajectoryStep last_step = 1;
}

message TerminalResearchResultResponse {}

message WriteCascadeEditRequest {  string uri = 1;
  string target_content = 2;
}

message WriteCascadeEditResponse {}

message StartAudioRecordingRequest {}

message StartAudioRecordingResponse {}

message EndAudioRecordingRequest {}

message EndAudioRecordingResponse {  string transcription = 1;
}

message GetCurrentAudioRecordingRequest {}

message GetCurrentAudioRecordingResponse {  float average_volume = 2;
}

message HandleProposeCodeExtensionVerificationRequest {  exa.cortex_pb.CortexTrajectoryStep step = 1;
}

message HandleProposeCodeExtensionVerificationResponse {}

message UpdateCascadeTrajectorySummariesRequest {  exa.cortex_pb.CascadeTrajectorySummaries summaries = 1;
}

message UpdateCascadeTrajectorySummariesResponse {}

message RunExtensionCodeRequest {  string code = 1;
}

message RunExtensionCodeResponse {  string output = 1;
}

message AddAnnotationRequest {  exa.codeium_common_pb.CodeAnnotation annotation = 1;
}

message AddAnnotationResponse {}

message RemoveAnnotationRequest {  string annotation_id = 1;
}

message RemoveAnnotationResponse {}

message ShowAnnotationRequest {  string annotation_id = 1;
}

message ShowAnnotationResponse {}

message GetSecretValueRequest {  string key = 1;
}

message GetSecretValueResponse {  string value = 1;
}

message StoreSecretValueRequest {  string key = 1;
  string value = 2;
}

message StoreSecretValueResponse {}

message CancelVibeAndReplaceRequest {}

message CancelVibeAndReplaceResponse {}

message SearchQueryRequest {  string query = 1;
  int32 max_results = 2;
  string cache_key = 3;
}

message SearchQueryResponse {  repeated string result_uris = 1;
}

message GetClaudeCodeVersionRequest {}

message GetClaudeCodeVersionResponse {  string version = 1;
}

enum ActiveEditorType {  ACTIVE_EDITOR_TYPE_UNSPECIFIED = 0;  ACTIVE_EDITOR_TYPE_TEXT_EDITOR = 1;  ACTIVE_EDITOR_TYPE_TERMINAL = 2;}
enum SoundType {  SOUND_TYPE_UNSPECIFIED = 0;  SOUND_TYPE_CASCADE_DONE = 1;}
